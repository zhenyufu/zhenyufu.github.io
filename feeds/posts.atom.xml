<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>csmojo</title><link href="http://csmojo.com/" rel="alternate"></link><link href="http://csmojo.com/feeds/posts.atom.xml" rel="self"></link><id>http://csmojo.com/</id><updated>2017-05-29T17:13:54-07:00</updated><entry><title>Graph Basics</title><link href="http://csmojo.com/posts/graph-basics.html" rel="alternate"></link><published>2017-05-29T17:13:54-07:00</published><author><name>David</name></author><id>tag:csmojo.com,2017-05-29:posts/graph-basics.html</id><summary type="html">&lt;p&gt;Some basic concept on graphs&lt;/p&gt;
&lt;h3&gt;Stuff&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Graph G&lt;ul&gt;
&lt;li&gt;G = (V, E) vertices/ nodes and edges &lt;/li&gt;
&lt;li&gt;n = |V|, m = |E|&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Simple Graph: unweighted, undirected, no self loops, no multi-edges&lt;/li&gt;
&lt;li&gt;Simple Cycle: Has a path that starts and ends at the same node&lt;/li&gt;
&lt;li&gt;When is an undirected graph a tree (any two implies the third): &lt;ul&gt;
&lt;li&gt;no cycles&lt;/li&gt;
&lt;li&gt;is connected&lt;/li&gt;
&lt;li&gt;m = n - 1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Find path between two nodes: BFS, DFS ( \(\theta (m + n)\) ) &lt;/li&gt;
&lt;li&gt;Bipartite graph: nodes can be divided into two different sets with no vertices connecting within a set&lt;ul&gt;
&lt;li&gt;is not bipartite &amp;lt;=&amp;gt; contains a cycle with an odd number of nodes &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Directed graph connectivity&lt;ul&gt;
&lt;li&gt;strongly connected: every pair of nodes can reach each other &lt;/li&gt;
&lt;li&gt;connected: for every pair of nodes, one can reach the other &lt;/li&gt;
&lt;li&gt;weakly connected: every pair of nodes can reach each other if one ignores edge directions&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Directed acyclic graph (DAG)&lt;ul&gt;
&lt;li&gt;is a directed graph with no directed cycles&lt;/li&gt;
&lt;li&gt;Topological ordering: for all the nodes are ordered that a earlier nodes goes to a later node&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Algorithm"></category><category term="Discrete Math"></category></entry><entry><title>How to use single page pagination in Wordpress</title><link href="http://csmojo.com/posts/how-to-use-single-page-pagination-in-wordpress.html" rel="alternate"></link><published>2016-10-17T10:42:01-07:00</published><author><name>David</name></author><id>tag:csmojo.com,2016-10-17:posts/how-to-use-single-page-pagination-in-wordpress.html</id><summary type="html">&lt;p&gt;Wordpress has a simple pagination system built in.&lt;/p&gt;
&lt;h3&gt;Reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://codex.wordpress.org/Function_Reference/wp_link_pages"&gt;wp_link_pages()&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;1. In the page or post&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;use the tag &lt;code&gt;&amp;lt;!--nextpage--&amp;gt;&lt;/code&gt; to seperate pages &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;first page stuff
&lt;span class="c"&gt;&amp;lt;!--nextpage--&amp;gt;&lt;/span&gt;
next page stuff
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;2. Define the pagination in the page template&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Have one at the start and at the end of the page &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="nx"&gt;wp_link_pages&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="nx"&gt;the_content&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="nx"&gt;wp_link_pages&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary></entry></feed>